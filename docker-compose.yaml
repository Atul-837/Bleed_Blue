version: "3.8"
services:
  bleed_blue_app:
    build:
      context: .
      dockerfile: "Dockerfile"
    container_name: we_bleed_blue
    restart: on-failure
    ports:
      - 8090:8090
    environment:
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_DATABASE=cricket_db
      - SPRING_DATA_MONGODB_USERNAME=bleed_blue
      - SPRING_DATA_MONGODB_PASSWORD=cricket
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SERVER_PORT=8090
    depends_on:
      - mongodb
    networks:
      - default

  react-app:
    container_name: react-app
    build:
      context: "./bleed_blue_frontend"
      dockerfile: "Dockerfile"
    volumes:
      - ./bleed_blue_frontend/src:/app/src
    ports:
      - 3000:3000

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017
    restart: unless-stopped
    volumes:
      - data:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=bleed_blue
      - MONGO_INITDB_ROOT_PASSWORD=cricket



  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express_bleed_blue
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=bleed_blue
      - ME_CONFIG_MONGODB_ADMINPASSWORD=cricket
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017

volumes:
  data: {}

networks:
  default:
    name: mongodb_network


